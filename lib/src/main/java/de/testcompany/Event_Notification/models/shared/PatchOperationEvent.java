/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package de.testcompany.Event_Notification.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PatchOperationEvent - JSON Patch definition according to &lt;a href='https://tools.ietf.org/html/rfc6902'&gt;RFC 6902&lt;/a&gt;.
 */

public class PatchOperationEvent {
    /**
     * The unique id of the Event which should be patched.
     */
    @JsonProperty("eventId")
    public String eventId;

    public PatchOperationEvent withEventId(String eventId) {
        this.eventId = eventId;
        return this;
    }
    
    /**
     * An operation is applied to the data structures represented by a JSON document.
     */
    @JsonProperty("op")
    public PatchOperation op;

    public PatchOperationEvent withOp(PatchOperation op) {
        this.op = op;
        return this;
    }
    
    /**
     * JSON-Pointer value [&lt;a href='https://tools.ietf.org/html/rfc6901'&gt;RFC 6901&lt;/a&gt;] that references a location within the target document (the "target location") where the operation is performed.
     */
    @JsonProperty("path")
    public String path;

    public PatchOperationEvent withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * New value to be set by the operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;

    public PatchOperationEvent withValue(String value) {
        this.value = value;
        return this;
    }
    
    public PatchOperationEvent(@JsonProperty("eventId") String eventId, @JsonProperty("op") PatchOperation op, @JsonProperty("path") String path) {
        this.eventId = eventId;
        this.op = op;
        this.path = path;
  }
}
