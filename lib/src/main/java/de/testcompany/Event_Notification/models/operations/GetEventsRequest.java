/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package de.testcompany.Event_Notification.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import de.testcompany.Event_Notification.utils.SpeakeasyMetadata;


public class GetEventsRequest {
    /**
     * Cursor that points to the end of the page of data that has been returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after")
    public String after;

    public GetEventsRequest withAfter(String after) {
        this.after = after;
        return this;
    }
    
    /**
     * Cursor that points to the start of the page of data that has been returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before")
    public String before;

    public GetEventsRequest withBefore(String before) {
        this.before = before;
        return this;
    }
    
    /**
     * Specifies how many items to return at one time (max 50). &lt;br&gt; A query may return fewer than the value of limit due to filtering.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public GetEventsRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Filter for event status:
     *   * `OPEN` - Event not processed yet.
     *   * `RETRY` - Event processed incorrectly. Retry is performed at the next dispatch interval. Maximum number of retries is 3.
     *   * `ERROR` - Event processed incorrectly three times. No retry is performed until the status is reset to `OPEN`.
     *   * `CLOSED` - Event was dispatched successfully.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public String status;

    public GetEventsRequest withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The unique id of the Subscription which should be managed.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=subscriptionId")
    public String subscriptionId;

    public GetEventsRequest withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    public GetEventsRequest(@JsonProperty("subscriptionId") String subscriptionId) {
        this.subscriptionId = subscriptionId;
  }
}
