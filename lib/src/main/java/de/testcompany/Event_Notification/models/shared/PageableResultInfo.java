/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package de.testcompany.Event_Notification.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PageableResultInfo - Cursor-based pagination to improve performance and minimize networks traffic, Pagination is enforced for operations
 * that potentially could return a large collection of items.
 * 
 */

public class PageableResultInfo {
    /**
     * A cursor refers to a random string of characters which marks a specific item in a collection of data.
     * 
     * The cursor will always point to the item, however it will be invalidated if the item is deleted or removed.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cursor")
    public Cursor cursor;

    public PageableResultInfo withCursor(Cursor cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * A Hyperlink that will return the next page of data. If not included, this is the last page of data.
     * &gt; The Absence of *next* hyperlink indicates that a query reached the end of the available result.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next")
    public String next;

    public PageableResultInfo withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * A Hyperlink that will return the previous page of data. If not included, this is the first page of data.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previous")
    public String previous;

    public PageableResultInfo withPrevious(String previous) {
        this.previous = previous;
        return this;
    }
    
    public PageableResultInfo(){}
}
